package tw.org.iii.rightnow.GooglePlaceAPI;import android.Manifest;import android.app.Activity;import android.content.Intent;import android.content.pm.PackageManager;import android.location.Address;import android.location.Geocoder;import android.location.Location;import android.location.LocationListener;import android.location.LocationManager;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.support.annotation.RequiresApi;import android.util.Log;import java.io.IOException;import java.util.List;import java.util.Locale;public class GpsToMap extends Activity {    LocationManager mgr;    @RequiresApi(api = Build.VERSION_CODES.M)    public void mapGo(String address){        Log.d("vic",address);        if(Build.VERSION.SDK_INT > 23){            if(checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)!= PackageManager.PERMISSION_GRANTED &&                    checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION)!= PackageManager.PERMISSION_GRANTED){                requestPermissions(new String[] {Manifest.permission.ACCESS_FINE_LOCATION},0);            }else{                //取自己經緯度位置                mgr.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 0, mgrstart);                Location location = mgr.getLastKnownLocation(LocationManager.GPS_PROVIDER);                double latitude = location.getLatitude();                double longitude = location.getLongitude();                Log.d("vic","自身經度:"+latitude+"自身緯度:"+longitude);                //地址轉換成經緯度工具                Geocoder gc=new Geocoder(GpsToMap.this,new Locale("zh","TW"));                try {                    //取得目的地的經緯度                    List<Address> addresslist=gc.getFromLocationName(address,1);                    double latitudeend=addresslist.get(0).getLatitude();                    double longitudeend=addresslist.get(0).getLongitude();                    Log.d("vic","目標經度:"+latitude+"目標緯度:"+longitude);                    //導航至目標                    Intent it=new Intent(Intent.ACTION_VIEW, Uri.parse(String.format("http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f",latitude,longitude,latitudeend,longitudeend)));                    it.setClassName("com.google.android.apps.maps","com.google.android.maps.MapsActivity");                    mgr.removeUpdates(mgrstart);                    startActivity(it);                } catch (IOException e) {                    e.printStackTrace();                }            }        }else{            //取自己經緯度位置            mgr.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 0, mgrstart);            Location location = mgr.getLastKnownLocation(LocationManager.GPS_PROVIDER);            double latitude = location.getLatitude();            double longitude = location.getLongitude();            Log.d("vic","自身經度:"+latitude+"自身緯度:"+longitude);            //地址轉換成經緯度工具            Geocoder gc=new Geocoder(GpsToMap.this,new Locale("zh","TW"));            try {                //取得目的地的經緯度                List<Address> addresslist=gc.getFromLocationName(address,1);                double latitudeend=addresslist.get(0).getLatitude();                double longitudeend=addresslist.get(0).getLongitude();                Log.d("vic","目標經度:"+latitude+"目標緯度:"+longitude);                //導航至目標                Intent it=new Intent(Intent.ACTION_VIEW, Uri.parse(String.format("http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f",latitude,longitude,latitudeend,longitudeend)));                it.setClassName("com.google.android.apps.maps","com.google.android.maps.MapsActivity");                mgr.removeUpdates(mgrstart);                startActivity(it);            } catch (IOException e) {                e.printStackTrace();            }        }    }    private LocationListener mgrstart=new LocationListener() {        @Override        public void onLocationChanged(Location location) {        }        @Override        public void onStatusChanged(String provider, int status, Bundle extras) {        }        @Override        public void onProviderEnabled(String provider) {        }        @Override        public void onProviderDisabled(String provider) {        }    };}